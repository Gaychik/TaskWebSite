@model Task.Models.Matrix
	 

@{
    ViewBag.Title = "Coordinate";
}

<h2>Coordinate</h2>


@using (Html.BeginForm("Create", "Matrix"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
	<h4>Fill the Coordinates</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.X, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.X, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.X, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Width, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Width, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Y, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Y, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Y, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })

			@Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
		</div>
	</div>
	 @Html.Label((string)ViewBag.Error ?? "", new { @class = "text-danger" })
	<div class="col-md-offset-2 col-md-10">
		<input type="submit" value="Create" class="btn btn-default" />
	</div>
</div>
}
<div>
    @Html.ActionLink("Back to the Home", "_Layout")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
